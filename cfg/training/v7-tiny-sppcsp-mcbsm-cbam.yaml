# A_Lightweight_Detection_Algorithm_for_Unmanned_Sur.pdf
# parameters
nc: 10  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# yolov7-tiny backbone
backbone:
  # [from, number, module, args] c2, k=1, s=1, p=None, g=1, act=True
  [[-1, 1, Conv, [32, 3, 2, None, 1]],  # 0-P1/2  - size = 640 / 2
  
   [-1, 1, Conv, [64, 3, 2, None, 1]],  # 1-P2/4    
   
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.Mish()]],
   [-2, 1, Conv, [32, 1, 1, None, 1, nn.Mish()]],
   [-1, 1, Conv, [32, 3, 1, None, 1]],
   [-1, 1, Conv, [32, 3, 1, None, 1]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.Mish()]],  # 7
   
   [-1, 1, MP, []],  # 8-P3/8
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.Mish()]],
   [-2, 1, Conv, [64, 1, 1, None, 1, nn.Mish()]],
   [-1, 1, Conv, [64, 3, 1, None, 1]],
   [-1, 1, Conv, [64, 3, 1, None, 1]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.Mish()]],  # 14
   
   [-1, 1, MP, []],  # 15-P4/16
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.Mish()]],
   [-2, 1, Conv, [128, 1, 1, None, 1, nn.Mish()]],
   [-1, 1, Conv, [128, 3, 1, None, 1]],
   [-1, 1, Conv, [128, 3, 1, None, 1]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.Mish()]],  # 21
   
   [-1, 1, MP, []],  # 22-P5/32
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.Mish()]],
   [-2, 1, Conv, [256, 1, 1, None, 1, nn.Mish()]],
   [-1, 1, Conv, [256, 3, 1, None, 1]],
   [-1, 1, Conv, [256, 3, 1, None, 1]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [512, 1, 1, None, 1, nn.Mish()]],  # 28
  ]

# yolov7-tiny head
head:
  [[-1, 1, Conv, [256, 1, 1, None, 1]],
   [-2, 1, SPPCSPC, [256]],
   [-1, 1, Conv, [256, 1, 1, None, 1]],
   [[-1, -3], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1, None, 1]],  # 33
  
   [-1, 1, Conv, [128, 1, 1, None, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [21, 1, Conv, [128, 1, 1, None, 1]], # route backbone P4
   [[-1, -2], 1, Concat, [1]],
   
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.Mish()]],
   [-2, 1, Conv, [64, 1, 1, None, 1, nn.Mish()]],
   [-1, 1, Conv, [64, 3, 1, None, 1]],
   [-1, 1, Conv, [64, 3, 1, None, 1]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.Mish()]],  # 43
  
   [-1, 1, Conv, [64, 1, 1, None, 1]],
   [-1, 1, nn.Upsample, [None, 4, 'nearest']],
   [7, 1, Conv, [64, 1, 1, None, 1]], # route backbone P3
   [[-1, -2], 1, Concat, [1]],
   
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.Mish()]],
   [-2, 1, Conv, [32, 1, 1, None, 1, nn.Mish()]],
   [-1, 1, Conv, [32, 3, 1, None, 1]],
   [-1, 1, Conv, [32, 3, 1, None, 1]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.Mish()]],  # 53
   
   [-1, 1, Conv, [128, 3, 4, None, 1]],
   [[-1, 43], 1, Concat, [1]],
   
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.Mish()]],
   [-2, 1, Conv, [64, 1, 1, None, 1, nn.Mish()]],
   [-1, 1, Conv, [64, 3, 1, None, 1]],
   [-1, 1, Conv, [64, 3, 1, None, 1]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.Mish()]],  # 61
   
   [-1, 1, Conv, [256, 3, 2, None, 1]],
   [[-1, 33], 1, Concat, [1]],
   
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.Mish()]],
   [-2, 1, Conv, [128, 1, 1, None, 1, nn.Mish()]],
   [-1, 1, Conv, [128, 3, 1, None, 1]],
   [-1, 1, Conv, [128, 3, 1, None, 1]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.Mish()]],  # 69
      
   [53, 1, Conv, [128, 3, 1, None, 1]], # for detect small obj
   [-1, 1, CBAM, [128]], #71
   [61, 1, Conv, [256, 3, 1, None, 1]],
   [-1, 1, CBAM, [256]], #73
   [69, 1, Conv, [512, 3, 1, None, 1]],
   [-1, 1, CBAM, [512]], # 75

   [[71,73,75], 1, IDetect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]

