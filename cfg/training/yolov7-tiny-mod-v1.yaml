# parameters
nc: 10  # number of classes (adjust to your specific number of classes)
depth_multiple: 0.5  # reduced model depth
width_multiple: 0.5  # reduced layer channel multiple

# anchors
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# yolov7-tiny backbone (reduce channels and layers)
backbone:
  [[-1, 1, Conv, [16, 3, 2, None, 1, nn.LeakyReLU(0.1)]],  # 0-P1/2
   [-1, 1, Conv, [32, 3, 2, None, 1, nn.LeakyReLU(0.1)]],  # 1-P2/4
   [-1, 1, Conv, [16, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-2, 1, Conv, [16, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, Conv, [16, 3, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, Conv, [16, 3, 1, None, 1, nn.LeakyReLU(0.1)]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 7
   [-1, 1, MP, []],  # 8-P3/8
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-2, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.LeakyReLU(0.1)]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 14
   [-1, 1, MP, []],  # 15-P4/16
  ]

# yolov7-tiny head (reduce channels and layers, adjust the number of classes)
head:
  [[-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-2, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-2, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-3, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [[-1, -2, -3], 1, Concat, [1]],
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [[-1, -4], 1, Concat, [1]],
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 26
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [14, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]], # route backbone P3
   [[-1, -2], 1, Concat, [1]],
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 36
   [36, 1, Conv, [64, 3, 2, None, 1, nn.LeakyReLU(0.1)]],
   [[-1, 26], 1, Concat, [1]],
   [[37, 38], 1, IDetect, [nc, anchors]],   # Detect(P3, P4)
  ]
